name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
  check_suite:
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-merge:
    name: Auto Merge PR
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request != null &&
      (github.event.pull_request.user.login == 'github-actions[bot]' ||
      contains(github.event.pull_request.labels.*.name, 'auto-merge'))

    steps:
      - name: Check if all checks passed
        uses: actions/github-script@v7
        id: check-status
        with:
          script: |
            const pullNumber = context.payload.pull_request?.number;
            if (!pullNumber) {
              console.log('No pull request found in context');
              return false;
            }

            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullNumber
            });

            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pullRequest.head.sha
            });

            const allPassed = checks.check_runs.every(
              check => check.status === 'completed' && check.conclusion === 'success'
            );

            return allPassed;

      - name: Enable auto-merge
        if: steps.check-status.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pullNumber = context.payload.pull_request?.number;
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullNumber,
              merge_method: 'squash'
            });

      - name: Delete branch after merge
        if: steps.check-status.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pullNumber = context.payload.pull_request?.number;
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullNumber
            });

            if (pullRequest.merged) {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/${pullRequest.head.ref}`
              });
            }

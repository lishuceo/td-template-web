name: Deploy Production

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deployment.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: |
          # npm test  # Uncomment when tests are added
          echo "Tests passed (placeholder)"

      # Option 1: Deploy to Vercel Production
      - name: Deploy to Vercel Production
        if: false  # Set to true to enable
        id: vercel-deployment
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      # Option 2: Deploy to Netlify Production
      - name: Deploy to Netlify Production
        if: false  # Set to true to enable
        id: netlify-deployment
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - Production"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # Option 3: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: true  # Enabled by default for demo
        id: gh-pages-deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: your-domain.com  # Optional: Set your custom domain

      - name: Set deployment URL
        id: deployment
        run: |
          echo "url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_OUTPUT

      - name: Create deployment notification
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: 'ðŸš€ Successfully deployed to production!\n\nURL: ${{ steps.deployment.outputs.url }}'
            });
